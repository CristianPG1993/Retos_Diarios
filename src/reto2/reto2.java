package reto2;

import java.util.Scanner; // Importamos la clase Scanner para leer datos del usuario

import java.util.HashSet; // Importamos la clase HashSet para detectar repeticiones
                          // y evitar bulces infinitos

public class reto2 {

    public static void main(String[] args) {
        /*
          Ejercicio 3: NÃºmero Feliz

          Un nÃºmero se llama feliz si, al reemplazarlo repetidamente por la suma
          de los cuadrados de sus dÃ­gitos,
          eventualmente llega al nÃºmero 1. Si entra en un bucle que nunca alcanza
          el 1, se considera un nÃºmero infeliz.

          Ejemplo:
          - El nÃºmero 19 es feliz:
          1Â² + 9Â² = 82
          8Â² + 2Â² = 68
          6Â² + 8Â² = 100
          1Â² + 0Â² + 0Â² = 1

          Objetivo:
          Pedir al usuario un nÃºmero y determinar si es un nÃºmero feliz o no.

         */

        // Generamos la peticiÃ³n de la variable al usuario

        Scanner scanner = new Scanner(System.in);
        System.out.println("Bienvenido, Â¡Comprueba si el nÃºmero es feliz!");
        System.out.println("Introduce un nÃºmero: ");
        int numero = scanner.nextInt();

        // Creamos la variable numerosVistos para guardar cada nÃºmero intermedio
        HashSet<Integer> numerosVistos = new HashSet<>();

        //Ponemos un bucle do - while para comprobar si el nÃºmero es feliz que mientras el nÃºmero
        // sea diferente de 1 o no lo hayamos visto antes en el bucle.

        do {
            numerosVistos.add(numero);             // Guarda el nÃºmero actual para detectar bucles
            numero = sumaCuadrados(numero);        // Calcula el nuevo nÃºmero transformado
        } while (numero != 1 && !numerosVistos.contains(numero));

        if (numero == 1) {
            System.out.println("Â¡El nÃºmero es feliz! ðŸ˜„");
        } else {
            System.out.println("El nÃºmero NO es feliz. ðŸ˜¢");
        }


    }

    // FunciÃ³n que calcula la suma de los cuadrados de los dÃ­gitos de un nÃºmero
    public static int sumaCuadrados(int n) {

        int suma = 0; // Variable acumuladora para la suma de cuadrados

        // Mientras el nÃºmero tenga dÃ­gitos
        while (n > 0) {
            int digito = n % 10;           // Extraemos el Ãºltimo dÃ­gito
            suma += digito * digito;       // Elevamos al cuadrado y lo sumamos
            n = n / 10;                    // Eliminamos el Ãºltimo dÃ­gito
        }

        return suma; // Devolvemos la suma total
    }


}
